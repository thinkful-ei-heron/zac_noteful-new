{"version":3,"sources":["error/ErrorPage.js","CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NewFolder/NewFolder.js","NewNote/NewNote.js","App/App.js","index.js"],"names":["ErrorPage","state","error","this","react_default","a","createElement","className","props","children","console","React","Component","NavCircleButton","tag","childrenm","otherProps","Object","objectWithoutProperties","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","context","_this$context$folders","_this$context$notes","map","folder","key","NavLink","to","concat","folder_id","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","contextType","ApiContext","NotePageNav","_this","findFolder","match","params","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","onDeleteNote","catch","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","NewFolder","handleSubmit","target","value","body","JSON","stringify","res","ok","json","Promise","reject","_this2","onSubmit","htmlFor","maxLength","required","NewNote","newNote","Date","cols","rows","App","setState","handleAddFolder","toConsumableArray","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","ErrorPage_ErrorPage","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a896d503.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class ErrorPage extends React.Component {\n    state = {error: null};\n    // Static method\n    static getDerivedStateFromError(error) {\n        // Called when an error is thrown in a child component\n        console.error(error);\n        // Store the error in the state\n        return {error};\n    }\n    render() {\n        // If there was an error, show an error page\n        if (this.state.error) {\n            return (\n                <main className=\"error-page\">\n                    <h1>Something seems to have gone wrong</h1>\n                    <p>Try refreshing the page</p>\n                </main>\n            );\n        }\n        // Otherwise, render the children\n        return this.props.children;\n    }\n}\n","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => { },\n  addNote: () => { },\n  deleteNote: () => { }\n})\n","export function findFolder(folders = [], folder_id) {\n  return folders.find(folder => folder.id === folder_id)\n}\n\nexport function findNote(notes = [], noteId) {\n  const output = notes.find(note => note.id == noteId)\n  return output;\n}\n\nexport function getNotesForFolder(notes = [], folder_id) {\n  if (!folder_id) return notes;\n  else return notes.filter(note => note.folder_id == folder_id)\n}\n\nexport function countNotesForFolder(notes = [], folder_id) {\n  return notes.filter(note => note.folder_id === folder_id).length\n}","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context;\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folder_id)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  // API_ENDPOINT: 'http://localhost:8000/api',\n  API_ENDPOINT: 'https://aqueous-temple-83092.herokuapp.com/api'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folder_id } = this.props.match.params;\n    const { notes = [] } = this.context;\n    const notesForFolder = getNotesForFolder(notes, folder_id)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  handleDeleteNote = () => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport ApiContext from '../ApiContext'\nimport config from '../config';\n\nexport default class NewFolder extends React.Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n  static contextType = ApiContext\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['foldername'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className=\"formContainer\">\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <label htmlFor=\"new_note\">New Folder: </label>\n          <input\n            id=\"foldername\"\n            name=\"foldername\"\n            type=\"text\"\n            maxLength='32'\n            required\n          />\n          <button>Add</button>\n        </form>\n      </section>\n\n\n    )\n  }\n}\n","import React from 'react';\nimport ApiContext from '../ApiContext'\nimport config from '../config';\nimport './NewNote.css'\n\n\n\nexport default class NewNote extends React.Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n  static contextType = ApiContext\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      name: e.target['name'].value,\n      content: e.target['content'].value,\n      folder_id: e.target['folder_id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folder_id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders = [] } = this.context\n    return (\n      <section className=\"formContainer\">\n        <form\n          onSubmit={(e) => this.handleSubmit(e)}>\n          <label htmlFor=\"new_note\">Name: </label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            required\n            maxLength='32'\n          />\n          <label htmlFor=\"new_note\">Content: </label>\n          <textarea\n            id=\"content\"\n            name=\"content\"\n            cols=\"30\"\n            rows=\"10\"\n            required\n            maxLength='1024'\n          ></textarea>\n          <select id=\"folder_id\" name='folder_id'>\n            <option value=''>Choose a folder</option>\n            {folders.map(folder =>\n              <option\n                value={folder.id}\n                key={folder.id}\n              >\n                {folder.name}\n              </option>\n            )}\n          </select>\n          <button type='submit'>Add</button>\n        </form>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ErrorPage from '../error/ErrorPage';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport NewFolder from '../NewFolder/NewFolder';\nimport NewNote from '../NewNote/NewNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({ notes, folders });\n            })\n            .catch(error => {\n                console.error({ error });\n            });\n    }\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    handleAddFolder = folder => {\n        this.setState({\n            folders: [\n                ...this.state.folders,\n                folder\n            ]\n        })\n    }\n\n    handleAddNote = note => {\n        this.setState({\n            notes: [\n                ...this.state.notes,\n                note\n            ]\n        })\n    }\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folder_id'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folder_id'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n                <Route path=\"/add-folder\" component={NewFolder} />\n                <Route path=\"/add-note\" component={NewNote} />\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            addFolder: this.handleAddFolder,\n            addNote: this.handleAddNote\n        };\n\n        return (\n            <ApiContext.Provider value={value}>\n                <ErrorPage>\n                    <div className=\"App\">\n                        <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                        <header className=\"App__header\">\n                            <h1>\n                                <Link to=\"/\">Noteful</Link>{' '}\n                                <FontAwesomeIcon icon=\"check-double\" />\n                            </h1>\n                        </header>\n                        <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                    </div>\n                </ErrorPage>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}